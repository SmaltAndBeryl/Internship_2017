ProfileCreationTrainingPartner:

 getTrainingPartnerRegistrationIdUsingApplicationId: >
  select trainingPartnerRegistrationId from TrainingPartnerOrganizationDetails where applicationId=:applicationId;

 getDataFromTrainingPartnerOrganizationDetails: >
  select * from TrainingPartnerOrganizationDetails where applicationId=:applicationId;

 getDataFromTrainingPartnerCenterLevelDetails: >
  select * from TrainingPartnerCenterLevelDetails where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive =1;

 getDataFromTrainingPartnerInstituteGrant: >
  select * from TrainingPartnerInstituteGrant where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive=1;

 getDataFromTrainingPartnerInstituteRecognition: >
  select * from TrainingPartnerInstituteRecognition where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive =1;

 getDataFromTrainingPartnerPriorExperienceInSkillTraining: >
  select * from TrainingPartnerPriorExperienceInSkillTraining where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive =1;

 getDataFromTrainingPartnerManagementAndStaffAndOfficialsDetails: >
  select * from TrainingPartnerManagementAndStaffAndOfficialsDetails where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive =1;
 
 getDataFromTrainingPartnerTrainingStaffDetails: >
  select * from TrainingPartnerTrainingStaffDetails where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive =1

 isTrainingCenterPresent: >
  SELECT EXISTS(SELECT * FROM scgj.trainingpartnercenterleveldetails WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and nameOfCenter=:nameOfCenter and isActive=1);
 
 isInstituteGrantPresent: >
  SELECT EXISTS(SELECT * FROM scgj.TrainingPartnerInstituteGrant WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and nameOfMinistry=:nameOfMinistry and isActive=1);
 
 isRecognitnionPresent: >
  SELECT EXISTS(SELECT * FROM scgj.trainingpartnerinstituterecognition WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and nameOfRecognizingBody=:nameOfRecognizingBody and isActive=1);
  
 isTrainingStaffPresent: >
  SELECT EXISTS(SELECT * FROM scgj.trainingpartnermanagementandstaffandofficialsdetails WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and emailId=:emailId and isActive=1);
 
 isTrainingExperiencePresent: >
  SELECT EXISTS(SELECT * FROM scgj.trainingpartnerpriorexperienceinskilltraining WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and courseName=:courseName and isActive=1);
 
 isTrainingPartnerStaffTrainingStaffPresent: >
  SELECT EXISTS(SELECT * FROM scgj.trainingpartnertrainingstaffdetails WHERE trainingPartnerRegistrationId=:trainingPartnerRegistrationId and emailId=:emailId and isActive=1);
 
 insertDataInApplication: >
  insert into application(applicationState,activeFlag,dateOfSubmission,userId)
   values(:applicationState,:activeFlag,:dateOfSubmission,:userId)  
  
 insertIntoTrainingPartnerOrganizationDetails: >
  INSERT INTO trainingpartnerorganizationdetails (`applicationId`, `organizationName`, `sPOCName`, `address`, `city`, `state`, `pincode`, `mobileNumber`, `alternateMobileNumber`, `landlineNumber`, `alternateLandlineNumber`, `faxNumber`, `websites`, `yearOfEstablishment`, `qualificationPacks`, `nSDCFunded`, `mediumOfInstructions`, `selfOwnedInstitution`,`franchiseOwnedInstitution`,`mobileTrainingInstitution`, `panNumber`,`tanNumber`,`turnOverOfInstitution`,`instituteReceivedAnyGrant`, `instituteReceivedAnyRecognition`, `priorExperienceOfInstitutionInSkillDevelopment`, `anyPriorExperienceOfInstitutionInSkillTraining`) VALUES (:applicationId,:organizationName,:sPOCName,:address,:city,:state,:pincode,:mobileNumber,:alternateMobileNumber,:landlineNumber,:alternateLandlineNumber,:faxNumber,:websites,:yearOfEstablishment,:qualificationPacks,:nSDCFunded,:mediumOfInstructions,:selfOwnedInstitution,:franchiseOwnedInstitution,:mobileTrainingInstitution,:panNumber,:tanNumber,:turnOverOfInstitution,:instituteReceivedAnyGrant,:instituteReceivedAnyRecognition,:priorExperienceOfInstitutionInSkillDevelopment,:anyPriorExperienceOfInstitutionInSkillTraining);


 insertIntoTrainingPartnerCenterLevelDetails: >
  INSERT INTO `scgj`.`trainingpartnercenterleveldetails` (`trainingPartnerRegistrationId`, `nameOfCenter`, `nameOperationHead` , `designationOperationHead` , `emailOperationHead` ,  `contactNumberOperationHead` ,   `educationalQualificationOperationHead` , `experienceOperationHead` , `cvOperationHeadPath` , `nameAffiliationCoordinator` , `designationAffiliationCoordinator` , `emailAffiliationCoordinator` , `contactNumberAffiliationCoordinator` ,  `educationalQualificationAffiliationCoordinator` , `experienceAffiliationCoordinator` , `cvAffiliationCoordinatorPath` , `nameSPOC`, `designationSPOC` , `emailSPOC` , `contactNumberSPOC` , `educationalQualificationSPOC` , `experienceSPOC` , `cvSPOCPath` , `numberOfPermanentOfficeManager`, `numberOftemporaryOfficeManager`, `numberOfPermanentOfficeStaff`, `numberOfTemporaryOfficeStaff`, `numberOfPermanentLabAssistants`, `numberOfTemporaryLabAssistants`, `numberOfPermanentAccountants`, `numberOfTemporaryAccountants`, `numberOfPermanentSupportStaff`, `numberOfTemporarySupportStaff`, `numberOfPermanentOtherEmployees`, `numberOfTemporaryOtherEmployees`, `areaOfInstitute`, `buildingType`, `sizeOfClassrooms`, `classroomPicsPath`, `numberOfClassrooms`, `sizeOfLabs`, `labPicsPath`, `numberOfLabs`, `sizeOfWorkshops`, `workshopPicsPath`, `numberOfWorkshops`, `mandatoryToolKitpresent`, `mandatoryToolKitAnnexurePath`, `mandatoryToolKitPicsPath`, `safeDrinkingWater`, `powerBackup`, `separateToilets`, `transportFacility`, `fireSafety` ,`presenceOfLibrary`, `numberOfTechnicalBooks`, `numberOfNonTechnicalBooks`, `numberOfMagazines`, `numberOfDailies`, `remarksOnInfrastructureDetails`, `sufficientClassroomIlluminationLevel`, `sufficientClassroomVentilationLevel`, `sufficientCenterCleanliness`, `centerWeatherProtected`, `remarksOnLearningEnviornment`, `printedBrochureOrProspectus`, `documentedPolicyAndProcedures`, `concessionPolicy`, `safeCustodyOfStudentDocuments`, `studentAgreementWithInstitution`, `remarksOnStudentAdmissionDetails`, `isActive`) VALUES(:trainingPartnerRegistrationId,:nameOfCenter, :nameOperationHead, :designationOperationHead, :emailOperationHead, :contactNumberOperationHead, :educationalQualificationOperationHead, :experienceOperationHead, :cvOperationHeadPath, :nameAffiliationCoordinator, :designationAffiliationCoordinator, :emailAffiliationCoordinator,:contactNumberAffiliationCoordinator, :educationalQualificationAffiliationCoordinator, :experienceAffiliationCoordinator, :cvAffiliationCoordinatorPath, :nameSPOC, :designationSPOC, :emailSPOC, :contactNumberSPOC, :educationalQualificationSPOC, :experienceSPOC, :cvSPOCPath, :numberOfPermanentOfficeManager, :numberOftemporaryOfficeManager, :numberOfPermanentOfficeStaff, :numberOfTemporaryOfficeStaff, :numberOfPermanentLabAssistants, :numberOfTemporaryLabAssistants, :numberOfPermanentAccountants, :numberOfTemporaryAccountants, :numberOfPermanentSupportStaff, :numberOfTemporarySupportStaff,  :numberOfPermanentOtherEmployees, :numberOfTemporaryOtherEmployees, :areaOfInstitute, :buildingType, :sizeOfClassrooms, :classroomPicsPath, :numberOfClassrooms, :sizeOfLabs, :labPicsPath, :numberOfLabs, :sizeOfWorkshops, :workshopPicsPath, :numberOfWorkshops, :mandatoryToolKitpresent, :mandatoryToolKitAnnexurePath, :mandatoryToolKitPicsPath, :safeDrinkingWater, :powerBackup, :separateToilets, :transportFacility, :fireSafety ,:presenceOfLibrary, :numberOfTechnicalBooks, :numberOfNonTechnicalBooks, :numberOfMagazines, :numberOfDailies, :remarksOnInfrastructureDetails, :sufficientClassroomIlluminationLevel, :sufficientClassroomVentilationLevel, :sufficientCenterCleanliness, :centerWeatherProtected, :remarksOnLearningEnviornment, :printedBrochureOrProspectus, :documentedPolicyAndProcedures, :concessionPolicy, :safeCustodyOfStudentDocuments, :studentAgreementWithInstitution, :remarksOnStudentAdmissionDetails, :isActive);


 insertIntoTrainingPartnerInstituteGrant: >
  INSERT INTO `scgj`.`trainingpartnerinstitutegrant` (`trainingPartnerRegistrationId`, `nameOfMinistry`, `natureOfWork`, `remarks`, `isActive`) VALUES (:trainingPartnerRegistrationId,:nameOfMinistry,:natureOfWork,:remarks,:isActive);


 insertIntoTrainingPartnerInstituteRecognition: >
  INSERT INTO `scgj`.`trainingpartnerinstituterecognition` (`trainingPartnerRegistrationId`, `nameOfRecognizingBody`, `recognitionNumber`, `yearOfRecognition`, `validityOfRecognition`, `isActive`) VALUES (:trainingPartnerRegistrationId,:nameOfRecognizingBody,:recognitionNumber,:yearOfRecognition,:validityOfRecognition,:isActive);


 insertIntoTrainingPartnerPriorExperienceInSkillTraining: >
  INSERT INTO `scgj`.`trainingpartnerpriorexperienceinskilltraining` (`trainingPartnerRegistrationId`, `courseName`, `numberOfBatchesPerYear`, `numberOfStudentsInEachBatch`, `isActive`) VALUES (:trainingPartnerRegistrationId,:courseName,:numberOfBatchesPerYear,:numberOfStudentsInEachBatch,:isActive);


 insertIntoTrainingPartnerManagementAndStaffAndOfficialsDetails: >
  INSERT INTO `scgj`.`trainingpartnermanagementandstaffandofficialsdetails` (`trainingPartnerRegistrationId`, `name`, `designation`, `emailId`, `contactNumber`, `educationalQualification`, `experience`, `cVPath`, `isActive`) VALUES (:trainingPartnerRegistrationId,:name,:designation,:emailId,:contactNumber,:educationalQualification,:experience,:cVPath,:isActive);
 
 insertIntoTrainingPartnerTrainingStaff: >
  INSERT INTO `scgj`.`trainingpartnertrainingstaffdetails` (`trainingPartnerRegistrationId`, `name`, `designation`, `emailId`, `educationalQualification` , `regularOrVisiting` , `experience` , `cVPath` , `certificatePath`, `isActive`) VALUES (:trainingPartnerRegistrationId,:name,:designation,:emailId,:educationalQualification,:regularOrVisiting,:experience,:cVPath,:certificatePath,:isActive);

 updateDataInApplication: >
  update Application set applicationState=:applicationState,activeFlag=:activeFlag,dateOfSubmission=:dateOfSubmission
    where userId=:userId

 updateIntoTrainingPartnerOrganizationDetails: >
  UPDATE `scgj`.`trainingpartnerorganizationdetails` SET `address`=:address,
  `city`=:city,
  `state`=:state, 
  `pincode`=:pincode, 
  `mobileNumber`=:mobileNumber, 
  `alternateMobileNumber`=:alternateMobileNumber,  
  `landlineNumber`=:landlineNumber, 
  `alternateLandlineNumber`=:alternateLandlineNumber, 
  `faxNumber`=:faxNumber, 
  `websites`=:websites, 
  `yearOfEstablishment`=:yearOfEstablishment, 
  `qualificationPacks`=:qualificationPacks, 
  `nSDCFunded`=:nSDCFunded, 
  `mediumOfInstructions`=:mediumOfInstructions, 
  `selfOwnedInstitution`=:selfOwnedInstitution, 
  `franchiseOwnedInstitution`=:franchiseOwnedInstitution,
  `mobileTrainingInstitution`=:mobileTrainingInstitution, 
  `panNumber`=:panNumber, 
  `tanNumber`=:tanNumber,  
  `turnOverOfInstitution`=:turnOverOfInstitution,
  `instituteReceivedAnyGrant`=:instituteReceivedAnyGrant,
  `instituteReceivedAnyRecognition`=:instituteReceivedAnyRecognition,
  `priorExperienceOfInstitutionInSkillDevelopment`=:priorExperienceOfInstitutionInSkillDevelopment,
  `anyPriorExperienceOfInstitutionInSkillTraining`=:anyPriorExperienceOfInstitutionInSkillTraining
  WHERE `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;  

 updateIntoTrainingPartnerCenterLevelDetails: >
  UPDATE `scgj`.`trainingpartnercenterleveldetails` SET `nameOperationHead` =:nameOperationHead,
  `designationOperationHead` =:designationOperationHead,
  `emailOperationHead` =:emailOperationHead,
  `contactNumberOperationHead` =:contactNumberOperationHead,
  `educationalQualificationOperationHead` =:educationalQualificationOperationHead,
  `experienceOperationHead` =:experienceOperationHead,
  `cvOperationHeadPath` =:cvOperationHeadPath,
  `nameAffiliationCoordinator` =:nameAffiliationCoordinator,
  `designationAffiliationCoordinator` =:designationAffiliationCoordinator,
  `emailAffiliationCoordinator` =:emailAffiliationCoordinator,
  `contactNumberAffiliationCoordinator` =:contactNumberAffiliationCoordinator,
  `educationalQualificationAffiliationCoordinator` =:educationalQualificationAffiliationCoordinator,
  `experienceAffiliationCoordinator` =:experienceAffiliationCoordinator,
  `cvAffiliationCoordinatorPath` =:cvAffiliationCoordinatorPath,
  `nameSPOC` =:nameSPOC,
  `designationSPOC` =:designationSPOC,
  `emailSPOC` =:emailSPOC,
  `contactNumberSPOC` =:contactNumberSPOC,
  `educationalQualificationSPOC` =:educationalQualificationSPOC,
  `experienceSPOC` =:experienceSPOC,
  `cvSPOCPath` =:cvSPOCPath,
  `nameOfCenter`=:nameOfCenter, `numberOfPermanentOfficeManager`=:numberOfPermanentOfficeManager,
  `numberOftemporaryOfficeManager`=:numberOftemporaryOfficeManager, 
  `numberOfPermanentOfficeStaff`=:numberOfPermanentOfficeStaff, 
  `numberOfTemporaryOfficeStaff`=:numberOfTemporaryOfficeStaff, 
  `numberOfTemporaryLabAssistants`=:numberOfTemporaryLabAssistants, 
  `numberOfPermanentAccountants`=:numberOfPermanentAccountants, 
  `numberOfTemporaryAccountants`=:numberOfTemporaryAccountants, 
  `numberOfPermanentSupportStaff`=:numberOfPermanentSupportStaff, 
  `numberOfTemporarySupportStaff`=:numberOfTemporarySupportStaff, 
  `numberOfPermanentOtherEmployees`=:numberOfPermanentOtherEmployees, 
  `numberOfTemporaryOtherEmployees`=:numberOfTemporaryOtherEmployees, 
  `areaOfInstitute`=:areaOfInstitute, 
  `buildingType`=:buildingType, 
  `sizeOfClassrooms`=:sizeOfClassrooms, 
  `classroomPicsPath`=:classroomPicsPath, 
  `numberOfClassrooms`=:numberOfClassrooms, 
  `sizeOfLabs`=:sizeOfLabs, 
  `labPicsPath`=:labPicsPath, 
  `numberOfLabs`=:numberOfLabs, 
  `sizeOfWorkshops`=:sizeOfWorkshops, 
  `workshopPicsPath`=:workshopPicsPath, 
  `numberOfWorkshops`=numberOfWorkshops,
  `mandatoryToolKitpresent`=:mandatoryToolKitpresent,
  `mandatoryToolKitAnnexurePath`=:mandatoryToolKitAnnexurePath, 
  `mandatoryToolKitPicsPath`=:mandatoryToolKitPicsPath, 
  `safeDrinkingWater`=:safeDrinkingWater, 
  `powerBackup`=:powerBackup, 
  `separateToilets`=:separateToilets, 
  `transportFacility`=:transportFacility, 
  `fireSafety` =:fireSafety,
  `presenceOfLibrary`=:presenceOfLibrary, 
  `numberOfTechnicalBooks`=:numberOfTechnicalBooks, 
  `numberOfNonTechnicalBooks`=:numberOfNonTechnicalBooks, 
  `numberOfMagazines`=:numberOfMagazines, 
  `numberOfDailies`=:numberOfDailies, 
  `remarksOnInfrastructureDetails`=:remarksOnInfrastructureDetails, 
  `sufficientClassroomIlluminationLevel`=:sufficientClassroomIlluminationLevel, 
  `sufficientClassroomVentilationLevel`=:sufficientClassroomVentilationLevel, 
  `sufficientCenterCleanliness`=:sufficientCenterCleanliness, 
  `centerWeatherProtected`=:centerWeatherProtected, 
  `remarksOnLearningEnviornment`=:remarksOnLearningEnviornment, 
  `printedBrochureOrProspectus`=:printedBrochureOrProspectus, 
  `documentedPolicyAndProcedures`=:documentedPolicyAndProcedures, 
  `concessionPolicy`=:concessionPolicy, 
  `safeCustodyOfStudentDocuments`=:safeCustodyOfStudentDocuments, 
  `studentAgreementWithInstitution`=:studentAgreementWithInstitution, 
  `remarksOnStudentAdmissionDetails`=:remarksOnStudentAdmissionDetails,
  `isActive`=:isActive
   WHERE `trainingPartnerCenterId`=:trainingPartnerCenterId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;

 updateIntoTrainingPartnerInstituteGrant: >
  UPDATE `scgj`.`trainingpartnerinstitutegrant` SET `nameOfMinistry`=:nameOfMinistry,
  `natureOfWork`=:natureOfWork,
  `remarks`=:remarks,
  `isActive`=:isActive
    WHERE `instituteGrantId`=:instituteGrantId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;


 updateIntoTrainingPartnerInstituteRecognition: >
  UPDATE `scgj`.`trainingpartnerinstituterecognition` SET `instituteRecognitionId`=:instituteRecognitionId, `nameOfRecognizingBody`=:nameOfRecognizingBody, `recognitionNumber`=:recognitionNumber, 
  `yearOfRecognition`=:yearOfRecognition, 
  `validityOfRecognition`=:validityOfRecognition,
  `isActive`=:isActive
   WHERE `instituteRecognitionId`=:instituteRecognitionId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;



 updateIntoTrainingPartnerPriorExperienceInSkillTraining: >
  UPDATE `scgj`.`trainingpartnerpriorexperienceinskilltraining` SET `courseName`=:courseName,
  `numberOfBatchesPerYear`=:numberOfBatchesPerYear,
  `numberOfStudentsInEachBatch`=:numberOfStudentsInEachBatch,
  `isActive`=:isActive
   WHERE `priorExperienceInSkillTrainingId`=:priorExperienceInSkillTrainingId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;



 updateIntoTrainingPartnerManagementAndStaffAndOfficialsDetails: >
  UPDATE `scgj`.`trainingpartnermanagementandstaffandofficialsdetails` SET  
  `name`=:name, 
  `designation`=:designation, 
  `emailId`=:emailId, 
  `contactNumber`=:contactNumber, 
  `educationalQualification`=:educationalQualification,	
  `cVPath`=:cVPath, 
  `isActive`=:isActive
   WHERE `managementAndStaffId`=:managementAndStaffId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;
 
 updateIntoTrainingStaff: >
  UPDATE `scgj`.`trainingpartnertrainingstaffdetails` SET 
  `name`=:name, 
  `designation`=:designation, 
  `emailId`=:emailId, 
  `educationalQualification`=:educationalQualification, 
  `regularOrVisiting`=:regularOrVisiting,
  `cVPath`=:cVPath, 
  `certificatePath`=:certificatePath,
  `isActive`=:isActive
   WHERE `trainingStaffId`=:trainingStaffId and `trainingPartnerRegistrationId`=:trainingPartnerRegistrationId;
 
 updatePanPath: >
  UPDATE scgj.TrainingPartnerOrganizationDetails SET panNumberPath = :panNumberPath where applicationId = :applicationId;
   
 updateTanPath: >
  UPDATE scgj.TrainingPartnerOrganizationDetails SET tanNumberPath = :tanNumberPath where applicationId = :applicationId;
 
 updateNSDCCertificatePath: >
  UPDATE scgj.TrainingPartnerOrganizationDetails SET nSDCFunded = :nSDCFunded , nSDCFundedCertificatePath = :nSDCFundedCertificatePath where applicationId = :applicationId and isActive=1;
  
 updateSelfOwnedAnnexurePath: >
  UPDATE scgj.TrainingPartnerOrganizationDetails SET selfOwnedInstitutionAnnexurePath = :selfOwnedInstitutionAnnexurePath where applicationId = :applicationId and isActive=1;

 updateFranchiseeAnnexurePath: >
  UPDATE scgj.TrainingPartnerOrganizationDetails SET franchiseOwnedInstitutionAnnexurePath = :franchiseeAnnexurePath where applicationId = :applicationId and isActive=1;
 
 updateMobileAnnexurePath: > 
  UPDATE scgj.TrainingPartnerOrganizationDetails SET mobileTrainingInstitutionAnnexurePath = :mobileTrainingInstitutionAnnexurePath where applicationId = :applicationIdand isActive=1;
 
 updateTrainingStaffEducationCertificatePath: >
  UPDATE scgj.TrainingPartnerTrainingStaffDetails SET certificatePath =:certificatePath where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive=1;
 
 updateTrainingStaffCvPath: >
  UPDATE scgj.TrainingPartnerTrainingStaffDetails SET cVPath =:cVPath where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive=1;
 
 updateManagementCvPath: > 
  UPDATE scgj.TrainingPartnerManagementAndStaffAndOfficialsDetails SET cVPath =:cVPath where trainingPartnerRegistrationId=:trainingPartnerRegistrationId and isActive=1;
 
 deleteFromTrainingPartnerInstituteGrant: >
  DELETE FROM `scgj`.`trainingpartnerinstitutegrant` WHERE `instituteGrantId`=:instituteGrantId;
  
 deleteFromTrainingPartnerInstituteRecognition: >
  DELETE FROM `scgj`.`trainingpartnerinstituterecognition` WHERE `instituteRecognitionId`=:instituteRecognitionId;
  
 deleteFromTrainingPartnerPriorExperienceInSkillTraining: >
  DELETE FROM `scgj`.`trainingpartnerPriorExperienceInSkillTraining` WHERE `priorExperienceInSkillTrainingId`=:priorExperienceInSkillTrainingId;
 
 deleteFromTrainingPartnerManagementAndStaffAndOfficialsDetails: >
  DELETE FROM `scgj`.`trainingpartnerManagementAndStaffAndOfficialsDetails` WHERE `managementAndStaffId`=:managementAndStaffId; 
  
 deleteFromTrainingPartnerCenterLevelDetails: >
  DELETE FROM `scgj`.`trainingpartnerCenterlevelDetails` WHERE `trainingPartnerCenterId`=:trainingPartnerCenterId; 
 
 updatePathsIntoTrainingPartnerManagementAndStaffAndOfficialsDetails: >
  UPDATE `scgj`.`trainingpartnermanagementandstaffandofficialsdetails` SET `cVPath`=:cVPath, `certificatePath`=:certificatePath WHERE `managementAndStaffId`=:managementAndStaffId;
      
 updatePathsIntoTrainingPartnerCenterLevelDetails: >
  UPDATE `scgj`.`trainingpartnercenterleveldetails` SET `classroomPicsPath`=:classroomPicsPath, `labPicsPath`=:labPicsPath, `workshopPicsPath`=:workshopPicsPath, `mandatoryToolKitAnnexurePath`=:mandatoryToolKitAnnexurePath, `mandatoryToolKitPicsPath`=:mandatoryToolKitPicsPath WHERE `trainingPartnerCenterId`=:trainingPartnerCenterId;
      
   