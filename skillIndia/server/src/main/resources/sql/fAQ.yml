faq: 
 selectSqlCountTotalCandidatesTrainedAssessedCertified: >
  SELECT SUM(totalCandidatesInBatch) AS candidatesEnrolled, (SUM(totalPass)+ SUM(totalFail)) AS candidatesAssessed, SUM(totalCertified) AS candidatesCertified
   FROM batch

 selectSqlTotalCandidatesTrainedAssessedCertifiedSchemeWise: >
  SELECT SUM(totalCandidatesInBatch) AS candidatesEnrolled, (SUM(totalPass)+ SUM(totalFail)) AS candidatesAssessed, SUM(totalCertified) AS candidatesCertified 
   FROM batch WHERE batchType = :batchType

 selectSqlCountTotalTrainingCentresInAState: >
  SELECT COUNT(centreId) FROM centre C WHERE state = :state;
   
 selectSqlCountTrainingCentresConductingTraining: >
  select count(distinct(centreId)) from batch where batchEndDate>now() and batchStartDate<=now()
  
 selectSqlCountOfCandidatesAssessmentUpcomingForAMonth: >
  SELECT SUM(totalCandidatesInbatch) FROM batch where Year(assessmentDate) >= Year(CurDate()) and assessmentDate>=Curdate() and Month(assessmentDate) = :month
  
 selectSqlNameOfAgencyToWhichABatchIsAssigned: >
  SELECT agencyName FROM agency A, batch B WHERE A.agencyId = B.agencyId and batchId = :batchId
  
 selectSqlCountTotalOfBatchesAssignedToAAssessmentAgency: >
  SELECT COUNT(batchId) FROM batch B, agency A WHERE B.agencyId = A.agencyId and A.agencyName = :agencyName
  
 selectSqlCountTotalNumberOfBatchesInAParticularState: >
  SELECT COUNT(batchId) FROM batch B, centre C WHERE B.centreId = C.centreId and C.state = :state;
  
 selectSqlCountTotalNumberOfBatchesInAParticularScheme: >
  SELECT COUNT(batchId) FROM batch WHERE batchType = :batchType and batchStartDate <= CurDate() and batchEndDate > CurDate();
  
 selectSqlCountTotalAssessorsOfAParticularAgencyInAParticularState: >
  SELECT COUNT(assessorId) FROM assessor A, agency B WHERE A.agencyId = B.agencyId and B.agencyName=:agencyName and A.state = :state;
  
 selectSqlStatusOfAParticularBatchWithId: >
  SELECT B.batchId, T.trainingPartnerName, B.batchStartDate, B.batchEndDate, B.assessmentDate, B.resultApproved FROM batch as B, trainingpartner as T WHERE B.batchId = :batchId and B.trainingPartnerId = T.trainingPartnerId
  
 selectSqlCountBatchesForWhichResultIsPending: >
  SELECT COUNT(batchId) FROM batch WHERE resultApproved = 'Pending';
  
 selectSqlCountTotalNonAssignedBatches: >
  SELECT SUM(case when batchAssignmentDate is null then 1 else 0 end) AS count_nulls FROM batch;
 
 selectSqlBatchWiseCandidatesDetails: >
  SELECT C.candidateName, C.mobileNumber, C.emailId, C.traineeAddress, T.trainingPartnerName, B.batchId, B.batchStartDate, B.batchEndDate from candidate C, batch B, trainingPartner T WHERE B.batchId = :batchId and B.batchId = C.batchId and B.trainingPartnerId = T.trainingPartnerId
 
 selectSqlCountTotalTrainingCentresNotTakingAnyBatches: >
  select (COUNT(distinct(T.trainingPartnerId))-count(distinct(B.trainingpartnerId))) 
   from trainingpartner T,batch B   